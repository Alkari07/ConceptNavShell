[{"C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\index.js":"1","C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\App.js":"2","C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\components\\NavBar.js":"3","C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\components\\PersistentDrawer.js":"4","C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\components\\SimpleTabs.js":"5"},{"size":219,"mtime":1613158714927,"results":"6","hashOfConfig":"7"},{"size":339,"mtime":1613068877280,"results":"8","hashOfConfig":"7"},{"size":559,"mtime":1612563921537,"results":"9","hashOfConfig":"7"},{"size":5918,"mtime":1613169366531,"results":"10","hashOfConfig":"7"},{"size":3216,"mtime":1613510588385,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"19lhszy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\index.js",[],["25","26"],"C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\App.js",["27","28"],"import React, {Component} from 'react'\nimport NavBar from './components/NavBar'\nimport SimpleTabs from './components/SimpleTabs'\nimport PersistentDrawer from './components/PersistentDrawer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <SimpleTabs></SimpleTabs>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\components\\NavBar.js",[],"C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\components\\PersistentDrawer.js",["29","30"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst drawerWidth = 240;\r\nconst contentOffset = 300;\r\nconst iframeHeight = 857;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    // padding: theme.spacing(1),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -contentOffset,\r\n    marginRight: -contentOffset\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n    marginRight: -drawerWidth\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const {\r\n    children, iframeSrc, title, ...other\r\n  } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n    // let height = document.getElementById('contentIframe').contentWindow.document.body.scrollHeight;\r\n    // document.getElementById('contentIframe').height = height;\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onListItemSelection = (index) => {\r\n    console.log(\"Item selected\", index );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Container position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n      {/* <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      > */}\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component={'span'} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      {/* </AppBar> */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button onClick={()=>onListItemSelection(index)} key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button onClick={()=>onListItemSelection(index)} key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div /*className={classes.drawerHeader}*/ />\r\n            <div style={{height: iframeHeight+'px'}}>\r\n            <iframe className='iframeContent'\r\n            frameBorder='0'\r\n            height='100%'\r\n            width='100%'\r\n            id = 'contentIframe'\r\n            src={iframeSrc} title=\"W3Schools Free Online Web Tutorials\"></iframe>\r\n            </div>\r\n      </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\rob9575\\git\\ConceptNavShell\\src\\components\\SimpleTabs.js",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":24},{"ruleId":"37","severity":1,"message":"42","line":6,"column":8,"nodeType":"39","messageId":"40","endLine":6,"endColumn":14},{"ruleId":"37","severity":1,"message":"43","line":87,"column":36,"nodeType":"39","messageId":"40","endLine":87,"endColumn":41},{"ruleId":"37","severity":1,"message":"44","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":12},{"ruleId":"37","severity":1,"message":"45","line":14,"column":8,"nodeType":"39","messageId":"40","endLine":14,"endColumn":14},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'PersistentDrawer' is defined but never used.","'AppBar' is defined but never used.","'other' is assigned a value but never used.","'clsx' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]